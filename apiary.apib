FORMAT: 1A
HOST: https://api.paybyphone.com

# PayByPhone Api
This is a list of PayByPhone Apis

## Response Codes
The common [HTTP Response Status Codes](http://tools.ietf.org/html/rfc7231#section-6) are used.

## Error Handling

Any code you write to call PayByPhone's APIs should expect to receive and handle errors from the service. A given error may be returned for multiple reasons, so it's a good idea to look at (and handle in code), the error messages returned with the error number.

400-series errors indicate that you cannot perform the requested action, the most common reasons being that you don't have permission or that a referred-to entity doesn't exist.

500-series errors indicate that a request didn't succeed, but may be retried. Though infrequent, these errors are to be expected as part of normal interaction with the service and should be explicitly handled with an exponential backoff algorithm. One such algorithm can be found at http://en.wikipedia.org/wiki/Truncated_binary_exponential_backoff.

Failed connection attempts should also be handled with exponential backoff.

# Group Identity And Access

## About
Identity And Access API provides Identity Management and Authorization resources

## Create user account [POST /identity/user/accounts]

Create a new User Account

**Response Codes**

- 201 - User account successfully created.
- 400 - Username or password does not meet validation requirements.
- 409 - Username is already in use.

+ Request (application/json)
    + Attributes
        + username: `+16046155905` (required, string) - E.164 formatted phone number
        + password: `1234` (required, string) - 6-20 character alphanumeric password
    + Body
    
            {
                "username": "+16046155905",
                "password": "1234"
            }

+ Response 201 (application/json)
    + Attributes
        + username: `+16046155905` (string) - E.164 phone number used to create user account.
        + userAccountId: `5fb93529-b3a1-486e-b23d-a14944bbe3f5` (string) - Assigned by the API at the moment of creation.
    + Body
    
            { 
                "username": "+16046155905",
                "userAccountId" : "5fb93529-b3a1-486e-b23d-a14944bbe3f5"
            }


## Cancel the active user account [DELETE /identity/user/accounts/{userAccountId}]

**Possible Response Codes**

- 200 - User account successfully cancelled.
- 401 - The access token has expired or is invalid.
- 403 - The user account it not active and cannot be cancelled.
- 403 - The member it not authorized to modify the specified user account.

+ Parameters
    + userAccountId: `5fb93529-b3a1-486e-b23d-a14944bbe3f5` (required, string) - User account to be cancelled.

+ Response 200


## Change user account password [PUT /identity/user/accounts/{userAccountId}/password]
An individual UserAccount resource to update the password

**Possible Response Codes**

- 202 - Request is being processed
- 400 - The request is invalid.
- 403 - Access Denied
- 500 - Shit hit the fan exception

**Possible events**

- UserAccountPasswordChanged
    
        {
            "UserAccountId":"5fb93529-b3a1-486e-b23d-a14944bbe3f5",
            "$type":"UserAccountPasswordChanged"
        }

- UserAccountPasswordChangedFailed

        {
            "UserAccountId":"5fb93529-b3a1-486e-b23d-a14944bbe3f5",
            "FailureReason":"[CurrentPasswordIncorrectDoesNotMeetComplexityRequirements|UserNotFound|InternalServerError]",
            "$type":"UserAccountPasswordChangedFailed
        }

+ Parameters
    + userAccountId: `5fb93529-b3a1-486e-b23d-a14944bbe3f5` (required, string) - User account to be cancelled.

+ Request (application/json)
    + Attributes
        + userAccountId: `5fb93529-b3a1486eb23da14944bbe3f5` (required, string) - User account to be cancelled.
        + currentPassword: `1234` (required, string) - Current password of the user account.
        + newPassword: `5678` (required, string) - New password for the user account.
    + Body
    
            {
                "userAccountId": "8d21a912-561a-48ff-b31b-00d600a2544e",
                "currentPassword": "1234",
                "newPassword": "5678"
            }

+ Response 202
    + Headers
    
            Location: https://api.paybyphone.com/events/d92cfe7d-dd59-49d6-be1a-a3b3bb5d3e6a


## Get an access token and refresh token [POST /identity/token]

**Possible Response Codes**

- 200 - OK
- 400 - See Possible error codes

**Possible Error Codes**

- IncorrectUsername
- IncorrectPassword
- AccountLocked
- AccountSuspended
- `invalid_client`


+ Request Get token from Credentials
    + Attributes
        + `grant_type`: `password` (required, string) - The grant type
        + username: `+16046155905` (required, string) - The username corresponding to an existing user account
        + password: `iphone_app` (required, string) - The password that match the user account
        + `client_id`: `iphone_app` (required, string) - The client identifier
    + Headers

            Content-Type: application/x-www-form-urlencoded
    + Body

            grant_type=password
            &username=%2B16046155905
            &password=1234
            &client_id={your_app_client_id}
            
+ Request Get token from refresh token
    + Attributes
        + `grant_type`: `refresh_token` (required, string) - The grant type
        + `refresh_token`: `+16046155905` (required, string) - The refresh token
        + `client_id`: `iphone_app` (required, string) - The client identifier
    + Headers
    
            Content-Type: application/x-www-form-urlencoded
    + Body
    
            grant_type=refresh_token
            &refresh_token=F72ECD394B69405E95DCEA175D49A35D
            &client_id={your_app_client_id}

+ Response 200 (application/json)
    + Attributes
        + `access_token`:`eyJ0eXAiOiJ....` (string) - Encoded access token
        + `token_type`:`bearer` (string) - Type of the token
        + `expires_in`:`1209599` (string) - Lifetime of the access token in seconds
        + `refresh_token`:`F72ECD394B69405E95DCEA175D49A35D` (string) - A refresh token - will be the same as the refresh token used in the request.
    + Body
    
            {
                "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJtZW1iZXJpZCI6IjViNWNjNmQ1LWNjZmEtNDc1OS04OGI0LTM1NTRmMTg0ZjZiYiIsImFjdGl2ZXVzZXJhY2NvdW50IjoiMWI3ZTdmYTAtZTI1Yi00OTM3LWI0MjEtYTNkMTAwZDQ5ZDdkIiwiaXNzIjoiUGF5QnlQaG9uZSBJZGVudGl0eSBBbmQgQWNjZXNzIiwiYXVkIjoiaHR0cDovL2FwaS5wYXlieXBob25lLmNvbSIsImV4cCI6MTQxOTAzMjI3NywibmJmIjoxNDE3ODIyNjc3fQ.dYc4bPdwA9OB4FJCaaSpAWplyxZozOlNTdZkhX7qgQE",
                "token_type": "bearer",
                "expires_in": 1209599,
                "refresh_token": "F72ECD394B69405E95DCEA175D49A35D"
            }


## Revoke a refresh token [DELETE /identity/refresh_token/{refresh_token_id}]

**Possible Response Codes**
- 204
- 400
- 401
- 404 - The refresh token could not be found for the authenticated user.

+ Parameters
    + refresh_token_id: `F72ECD394B69405E95DCEA175D49A35D` (required, string) - Refresh token to revoke

+ Response 204


## Recover password [POST /identity/user/accounts/password/recover]

**Possible Response Codes**
- 204
- 400

+ Request (application/json)
    + Attributes
        + username: `+16046155905` (required, string) - Username to recover password for.
        + language: `en-US` (required, enum[string]) - Language in which password recovery message should be sent.
            + Members
                + `en-US`
                + `en-GB`
                + `fr-FR`
                + `fr-CA`
    + Body
    
            {
                "username":"+16046155905",
                "language":"en-US"
            }

+ Response 202


# Group Events Placeholder

Placeholder for Events endpoint documentation

# Group Parking Placeholder

Placeholder for Parking endpoint documentation

# Group Payment Methods Placeholder

Placeholder for Payment Methods endpoint documentation

# Group Notifications Placeholder

Placeholder for Notifications endpoint documentation


# Group Parking

## About
Parking API provides parking related resources

# Group Vehicles
Parking Vehicle resources

## Vehicles [/public/parking/accounts/{userAccountId}/vehicles]
The vehicles root resource

+ Parameters
    + userAccountId (required, string, `8d21a912-561a-48ff-b31b-00d600a2544e`) ... `userAccountId` of the UserAccount in the form of a GUID.

+ Model (application/json)

    JSON representation of Vehicles.

    + Body

            [{ 
                "id": "abc-234", 
                "userAccountId" : "8d21a912-561a-48ff-b31b-00d600a2544e",
                "licensePlate": "ZZZ 666", 
                "province" : "BC", 
                "vehicleType" : 3 
            }]

### Add vehicle for user [POST]

Add one or many vehicles to a user's account.

User is identified by the `userAccountId`.

**Request Contract**

    Header: Authorization: Bearer <token>
    Content-Type: application/json
    {
        "licensePlate": "",
        "province": "",
        "vehicleType": ""
    }

**Mandatory Fields**

- licensePlate
- province
- vehicleType

**Possible Response Codes**

- 202
- 400
- 409

+ Request with mandatory fields (application/json)
    + Body

            { 
                "licensePlate": "ZZZ 666", 
                "province" : "BC", 
                "vehicleType" : 4 
            }
+ Response 202 (application/json)
    + Header

            Location: http://api.dev.paybyphone.com/public/parking/accounts/8d21a912-561a-48ff-b31b-00d600a2544e/vehicles/abc-234

+ Request no province (application/json)

        { 
            "licensePlate": "ZZZ 666", 
            "province" : null, 
            "vehicleType" : 4 
        }
+ Response 400

        {
            "error": "The request is invalid"
        }

+ Request no licensePlate (application/json)

        { 
            "licensePlate": "", 
            "province" : "BC", 
            "vehicleType" : 4 
        }
+ Response 400

        {
            "error": "The request is invalid"
        }

+ Request no vehicleType (application/json)

        { 
            "licensePlate": "ZZZ 666", 
            "province" : "BC", 
            "vehicleType" : null 
        }
+ Response 400

        {
            "error": "The request is invalid"
        }

+ Request License Plate already exists (application/json)
    + Body
    
            { 
                "licensePlate": "ZZZ 666", 
                "province" : "BC", 
                "vehicleType" : 4 
            }
+ Response 409

### Retrieve all vehicles for user [GET]

Get all vehicles from a User's Account.

User is identified by the `userAccountId`.


**Request Contract**

    Header: Authorization: Bearer <token>

**Response Contract**
    
    Content-Type: application/json
    [{ 
        "id": "", 
        "userAccountId" : "",
        "licensePlate": "", 
        "province" : "", 
        "vehicleType" :  
    }]

The *id* is assigned by the API at the moment of creation. 
    
**Possible Response Codes**

- 200
- 404

+ Request userAccountId Exists

        /public/parking/accounts/{userAccountId}/vehicles/
+ Response 200
    [Vehicles][]

+ Request userAccountId Does Not Exists 

        /public/parking/accounts/{userAccountId}/vehicles/
+ Response 404


## Vehicle [/public/parking/accounts/{userAccountId}/vehicles/{vehicleId}]
An individual vehicle resource

+ Parameters
    + userAccountId (required, string, `8d21a912-561a-48ff-b31b-00d600a2544e`) ... `userAccountId` of the UserAccount in the form of a GUID.
    + vehicleId (required, string, `fff-gr34-fff`) ... `vehicleId` of the Vehicle Resource to perform action with. Has example value.

+ Model (application/json)

    JSON representation of A Vehicle.

    + Body

            { 
                "id": "abc-234", 
                "userAccountId" : "8d21a912-561a-48ff-b31b-00d600a2544e",
                "licensePlate": "ZZZ 666", 
                "province" : "BC", 
                "vehicleType" : 3 
            }
            
### Retrieve an individual vehicle for user [GET]
Get an individual vehicle from a User's Account.

User is identified by the `userAccountId`.

Vehicle is identified by the `vehicleId`.

**Request Contract**

    Header: Authorization: Bearer <token>

**Response Contract**
    
    Content-Type: application/json
    { 
        "id": "", 
        "userAccountId" : "",
        "licensePlate": "", 
        "province" : "", 
        "vehicleType" :  
    }

The *id* is assigned by the API at the moment of creation. 
    
**Possible Response Codes**

- 200
- 404

+ Request vehicleId Exists

        /public/parking/accounts/{userAccountId}/vehicles/{vehicleId}
+ Response 200
    [Vehicle][]

+ Request vehicleId Does Not Exists 

        /public/parking/accounts/{userAccountId}/vehicles/{vehicleId}
+ Response 404

### Edit a vehicle for user [PUT]
Update a vehicle record for a User

User is identified by the `userAccountId`.

Vehicle is identified by the `vehicleId`.

**Request Contract**

    Header: Authorization: Bearer <token>
    Content-Type: application/json
    {
        "licensePlate": "",
        "province": "",
        "vehicleType": ""
    }

**Mandatory Fields**

- licensePlate
- province
- vehicleType

**Possible Response Codes**

- 204
- 400
- 404
- 409 

+ Request with mandatory fields (application/json)
    + Body

            { 
                "licensePlate": "ZZZ 666", 
                "province" : "BC", 
                "vehicleType" : 4 
            }
+ Response 204

+ Request no province (application/json)

        { 
            "licensePlate": "ZZZ 666", 
            "province" : null, 
            "vehicleType" : 4 
        }
+ Response 400

        {
            "error": "The request is invalid"
        }

+ Request no licensePlate (application/json)

        { 
            "licensePlate": "", 
            "province" : "BC", 
            "vehicleType" : 4 
        }
+ Response 400

        {
            "error": "The request is invalid"
        }

+ Request no vehicleType (application/json)

        { 
            "licensePlate": "ZZZ 666", 
            "province" : "BC", 
            "vehicleType" : null 
        }
+ Response 400

        {
            "error": "The request is invalid"
        }

+ Request License Plate already exists (application/json)
    + Body
    
            { 
                "licensePlate": "ZZZ 666", 
                "province" : "BC", 
                "vehicleType" : 4 
            }
+ Response 409

+ Request vehicleId Does Not Exists 

        /public/parking/accounts/{userAccountId}/vehicles/{vehicleId}
+ Response 404

### Remove a vehicle for user [DELETE]
**Request Contract**

    Header: Authorization: Bearer <token>

**Possible Response Codes**

- 204
- 404

+ Request vehicleId Exists

        /public/parking/accounts/{userAccountId}/vehicles/{vehicleId}
+ Response 204

+ Request vehicleId Does Not Exists 

        /public/parking/accounts/{userAccountId}/vehicles/{vehicleId}
+ Response 404

# Group Locations
Parking Location resources

## Locations [/public/parking/locations]
The locations root resource

+ Model (application/json)

    JSON representation of Locations.

    + Body

            [{ 
                "locationNumber" : 10202990,
                "name" : "12TH STREET NORTH",
                "vendor" : "SFMTA",
                "vendorRegion" : "PORT",
                "status" : "LotStatus_LotIsOpen",
                "extendNotAllowed" : false,
                "isStallBased" : true,
                "isPlateBased" : true,
                "currency" : "USD",
                "country" : "us",
                "defaultTimeUnit" : "TimeUnit_Hours",
                "promptForCvv" : false,
                "currentMaxStay" : 120,
                "latitude" : 19.235135,
                "longitude" : 23.445135,
                "validIn" : ["ca","us"],
                "lotMessage" : "Some custom message for this lot 10202990."
            }]

### Retrieve location for location number [GET]

Get location from a location number.

Location is identified by the `locationNumber`.


**Request Contract**

    Header: Authorization: Bearer <token>

**Response Contract**
    
    Content-Type: application/json
    [{ 
        "locationNumber" : "",
        "name" : "",
        "vendor" : "",
        "vendorRegion" : "",
        "status" : "",
        "extendNotAllowed" : "",
        "isStallBased" : "",
        "isPlateBased" : "",
        "currency" : "",
        "country" : "",
        "defaultTimeUnit" : "",
        "altTimeUnit" : "",
        "promptForCvv" : "",
        "currentMaxStay" : "",
        "latitude" : "",
        "longitude" : "",
        "validIn" : [],
        "lotMessage" : ""
    }]

The *id* is assigned by the API at the moment of creation. 
    
**Possible Response Codes**

- 200
- 404

+ Request userAccountId Exists

        /public/parking/locations/
+ Response 200
    [Locations][]

+ Request userAccountId Does Not Exists 

        /public/parking/locations/
+ Response 404


## Location [/public/parking/locations/{locationNumber}?country={country}]
An individual location resource

+ Parameters
    + locationNumber (required, string, `fff-gr34-fff`) ... `locationNumber` of the Location Resource to perform action with. Has example value.
    + country (required, string, `us`) ... `country` of the Location in the form of a 2-letter abbreviation.

+ Model (application/json)

    JSON representation of A Location.

    + Body

            { 
                "locationNumber" : 10202990,
                "name" : "12TH STREET NORTH",
                "vendor" : "SFMTA",
                "vendorRegion" : "PORT",
                "status" : "LotStatus_LotIsOpen",
                "extendNotAllowed" : false,
                "isStallBased" : true,
                "isPlateBased" : true,
                "currency" : "USD",
                "country" : "us",
                "defaultTimeUnit" : "TimeUnit_Hours",
                "promptForCvv" : false,
                "currentMaxStay" : 120,
                "latitude" : 19.235135,
                "longitude" : 23.445135,
                "validIn" : ["ca","us"],
                "lotMessage" : "Some custom message for this lot 10202990."
            }
            
### Retrieve an individual location for user [GET]
Get an individual location from a User's Account.

User is identified by the `userAccountId`.

Location is identified by the `locationNumber`.

**Request Contract**

    Header: Authorization: Bearer <token>

**Response Contract**
    
    Content-Type: application/json
    [{
        "locationNumber" : "",
        "name" : "",
        "vendor" : "",
        "vendorRegion" : "",
        "status" : "",
        "extendNotAllowed" : "",
        "isStallBased" : "",
        "isPlateBased" : "",
        "currency" : "",
        "country" : "",
        "defaultTimeUnit" : "",
        "altTimeUnit" : "",
        "promptForCvv" : "",
        "currentMaxStay" : "",
        "latitude" : "",
        "longitude" : "",
        "validIn" : [],
        "lotMessage" : ""
    }]

The *locationNumber* is assigned by the API at the moment of creation. 
    
**Possible Response Codes**

- 200
- 404

+ Request locationId Exists

        /public/parking/locations/{locationNumber}
+ Response 200
    [Location][]

+ Request locationId Does Not Exists 

        /public/parking/locations/{locationNumber}
+ Response 404

# Group Sessions
Parking Session resources

## Sessions [/public/parking/sessions]
The parking sessions root resource

**Request Contract**

    Header: Authorization: Bearer <token>
    Content-Type: application/json
    {
        "locationNumber": "",
        "vehicleId": "",
        "durationInMinutes": "",
        "userAccountId": "",
        "startTime": ""
    }

**Mandatory Fields**

- locationNumber
- vehicleId
- durationInMinutes
- userAccountId
- startTime

**Possible Response Codes**

- 202
- 400

### Create a parking session [POST]
+ Request lot no plate (application/json)

        {
            "durationInMinutes":30,
            "locationNumber":"10202990",
            "stall":null,
            "userAccountId":"8d21a912-561a-48ff-b31b-00d600a2544e",
            "startTime":"2014-07-28T09:23:28.0000-0700",
            "vehicleId":null
        }
+ Response 202
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e/

+ Request lot with plate (application/json)

        {
            "durationInMinutes":30,
            "locationNumber":"7399",
            "stall":null,
            "userAccountId":"8d21a912-561a-48ff-b31b-00d600a2544e",
            "startTime":"2014-07-28T09:23:28.0000-0700",
            "vehicleId":"abc-234"
        }
+ Response 202
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e/

* Request lot+stall no plate (application/json)

        {
            "durationInMinutes":30,
            "locationNumber":"20200031",
            "stall":"1234",
            "userAccountId":"8d21a912-561a-48ff-b31b-00d600a2544e",
            "startTime":"2014-07-28T09:23:28.0000-0700",
            "vehicleId":null
        }
+ Response 202
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e/

* Request lot+stall with plate (application/json)

        {
            "durationInMinutes":30,
            "locationNumber":"4229",
            "stall":"1",
            "userAccountId":"8d21a912-561a-48ff-b31b-00d600a2544e",
            "startTime":"2014-07-28T09:23:28.0000-0700",
            "vehicleId":"abc-234"
        }
+ Response 202
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e/

+ Request stall reverse lookup no plate (application/json)

        {
            "durationInMinutes":30,
            "locationNumber":null,
            "stall":"26106",
            "userAccountId":"8d21a912-561a-48ff-b31b-00d600a2544e",
            "startTime":"2014-07-28T09:23:28.0000-0700",
            "vehicleId":null
        }
+ Response 202
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e/

+ Request stall reverse lookup with plate (application/json)

        {
            "durationInMinutes":30,
            "locationNumber":null,
            "stall":"53326",
            "userAccountId":"8d21a912-561a-48ff-b31b-00d600a2544e",
            "startTime":"2014-07-28T09:23:28.0000-0700",
            "vehicleId":"abc-234"
        }
+ Response 202
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e/

+ Response 400

        {
            "error": "The request is invalid"
        }


## Session [/public/parking/sessions/{parkingSessionId}]

An individual parking session resource

+ Parameters
    + parkingSessionId (required, string, `abc-23-4443-ff`) ... string `parkingSessionId` of the Parking Session Resource to perform action with. Has example value.

+ Model (application/json)

    JSON representation of A Parking Session.

    + Body

            {
                "id": "cf3da0c0-6313-46a8-871f-bb5b577d5ecc",
                "locationNumber": "10202990",
                "vehicleId": "abc-234",
                "licensePlate": "ABC 123",
                "durationInMinutes": "30",
                "userAccountId": "8d21a912-561a-48ff-b31b-00d600a2544e",
                "startTime": "2014-07-22T10:14:40.0000-0700"
            }

### Retrieve an individual parking session [GET]
Get an individual parking session

Parking Session is identified by the `parkingSessionId`.

**Request Contract**

    Header: Authorization: Bearer <token>

**Response Contract**
    
    Content-Type: application/json
    {
        "id": "",
        "locationNumber": "",
        "vehicleId": "",
        "licensePlate": "",
        "durationInMinutes": "",
        "userAccountId": "",
        "startTime": ""
    }
    
The *id* is assigned by the API at the moment of creation. 
    
**Possible Response Codes**

- 200
- 404

+ Request parkingSessionId exists

        /public/parking/sessions/{parkingSessionId}
+ Response 200
    [Session][]

+ Request parkingSessionId Does Not Exists

        /public/parking/sessions/{parkingSessionId}
+ Response 400

        {
            "error": "The request is invalid"
        }
        
## SessionsSince [/public/parking/sessions?sinceTimeStampRfc3339={sinceTime}&howMany={howMany}]

Parking sessions since given timestamp

+ Parameters
    + sinceTime (required, date, `2014-07-22T10:14:40.0000-0700`) ... date `sinceTime` sessions since sinceTime. Has example value.
    + howMany (required, number) ... number `howMany` records to return.

+ Model (application/json)

    JSON representation of A Parking Session.

    + Body

            [{
                "id": "cf3da0c0-6313-46a8-871f-bb5b587d5ecc",
                "locationNumber": "10202990",
                "vehicleId": "abc-234",
                "licensePlate": "ABC 123",
                "durationInMinutes": "30",
                "userAccountId": "8d21a912-561a-48ff-b31b-00d600a2544e",
                "startTime": "2014-07-22T10:14:40.0000-0700"
            },
            {
                "id": "cf3da0c0-6313-46a8-871f-bb5b567d5ecc",
                "locationNumber": "10202990",
                "vehicleId": "abc-234",
                "licensePlate": "ABC 123",
                "durationInMinutes": "30",
                "userAccountId": "8d21a912-561a-48ff-b31b-00d600a2544e",
                "startTime": "2014-07-22T10:14:40.0000-0700"
            }]
            

### Retrieve an individual parking session [GET]
Get an individual parking session

**Request Contract**

    Header: Authorization: Bearer <token>

**Response Contract**
    
    Content-Type: application/json
    {
        "startTime": "",
        "howMany": "",
    }
    
The *id* is assigned by the API at the moment of creation. 
    
**Possible Response Codes**

- 200
- 404

+ Request parkingSessionId exists

        /public/parking/sessions?sinceTimeStampRfc3339={sinceTime}&howMany={howMany}
+ Response 200
    [SessionsSince][]

+ Request parkingSessionId Does Not Exists

        /public/parking/sessions?sinceTimeStampRfc3339={sinceTime}&howMany={howMany}
+ Response 400

        {
            "error": "The request is invalid"
        }        

## SessionStop [/public/parking/sessions/{parkingSessionId}/stop]
An individual vehicle resource

### Stop a parking session [PUT]
Stop an individual parking session

Parking Session is identified by the `parkingSessionId`.

**Request Contract**

    Header: Authorization: Bearer <token>

**Response Contract**
    
The *id* is assigned by the API at the moment of creation. 
    
**Possible Response Codes**

- 204
- 400

+ Request stop parking session

        /public/parking/sessions/{parkingSessionId}/stop
        
+ Response 204
    + Header
    
            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e

+ Request parkingSessionId Does Not Exists

        /public/parking/sessions/{parkingSessionId}/stop
+ Response 400

        {
            "error": "The request is invalid"
        }


# Group Parking Preferences
Parking Preferences resources

## Preferences [/public/parking/accounts/{userAccountId}/preferences]
The parking preferences root resource

+ Parameters
    + userAccountId (required, string, `8d21a912-561a-48ff-b31b-00d600a2544e`) ... `userAccountId` of the UserAccount in the form of a GUID.

+ Model (application/json)

    JSON representation of Parking Preferences

    + Body

            { 
                "email": "sjones@test.com", 
                "sendEmailReceipts": true, 
                "sendTextReminders": false, 
                "sendTextReceipts": false
            }

### Create new parking preference [POST]

Add new preferences to a Users Account
User is identified by the `userAccountId`.

**Request Contract**

    Header: Authorization: Bearer <token>
    Content-Type: application/json
    {
        "email" : "", 
        "sendEmailReceipts": "", 
        "sendTextReminders": "", 
        "sendTextReceipts": ""
    }

**Mandatory Fields**

- email
- sendEmailReceipts
- sendTextReminders
- sendTextReceipts

**Possible Response Codes**

- 202
- 400
- 404
- 409

+ Request with mandatory fields 
    [Preferences][]

+ Response 202 (application/json)
    + Header

            Location: http://api.dev.paybyphone.com/public/parking/accounts/f2b66f0b-1a48-4d6a-86b6-5ec41d63d84a/preferences

+ Request no email (application/json)            

        {
            "email" : null, 
            "SendEmailReceipts": true,
            "sendTextReminders": true, 
            "sendTextReceipts": true
        }
+ Response 400

        {
            "error": "The request is invalid"
        }

+ Request no sendEmailReceipts (application/json)            

        {
            "email" : "sjones@test.com", 
            "sendEmailReceipts": null, 
            "sendTextReminders": true, 
            "sendTextReceipts": true
        }
+ Response 400

        {
            "error": "The request is invalid"
        }

+ Request no sendTextReminders (application/json)            

        {
            "email" : "sjones@test.com", 
            "sendEmailReceipts": true, 
            "sendTextReminders": null, 
            "sendTextReceipts": true
        }
+ Response 400

        {
            "error": "The request is invalid"
        }

+ Request no sendTextReceipts (application/json)            

        {
            "email" : "sjones@test.com", 
            "sendEmailReceipts": true, 
            "sendTextReminders": true, 
            "sendTextReceipts": null
        }
+ Response 400

        {
            "error": "The request is invalid"
        }

+ Request userAccountId Does not exist        
        
        /public/parking/accounts/{userAccountId}/preferences
+ Response 404

### Retrieve parking preferences for user account [GET]
Get a parking preferences for a UserAccount,

User is identified by the `userAccountId`.

**Request Contract**

    Header: Authorization: Bearer <token>

**Response Contract**
    
    Content-Type: application/json
    { 
        "email": "sjones@test.com", 
        "sendEmailReceipts": true, 
        "sendTextReminders": false, 
        "sendTextReceipts": false
    }

**Possible Response Codes**

- 200
- 404

+ Request userAccountId Exists

        /public/parking/accounts/{userAccountId}/preferences
+ Response 200
    [Preferences][]

+ Request userAccountId Does Not Exists 

        /public/parking/accounts/{userAccountId}/preferences
+ Response 404

### Edit parking preferences [PUT]

Update parking preferences record for a User

User is identified by the `userAccountId`.

    Header: Authorization: Bearer <token>
    Content-Type: application/json
    {
        "email" : "", 
        "sendEmailReceipts": "", 
        "sendTextReminders": "", 
        "sendTextReceipts": ""
    }

**Mandatory Fields**

- email
- sendEmailReceipts
- sendTextReminders
- sendTextReceipts

**Possible Response Codes**

- 204
- 400
- 404
- 409 

+ Request all fields supplied
    [Preferences][]

+ Response 204 (application/json)

+ Request no email (application/json)            

        {
            "email" : null, 
            "SendEmailReceipts": true,
            "sendTextReminders": true, 
            "sendTextReceipts": true
        }
+ Response 400

        {
            "error": "The request is invalid"
        }

+ Request no sendEmailReceipts (application/json)            

        {
            "email" : "sjones@test.com", 
            "sendEmailReceipts": null, 
            "sendTextReminders": true, 
            "sendTextReceipts": true
        }
+ Response 400

        {
            "error": "The request is invalid"
        }

+ Request no sendTextReminders (application/json)            

        {
            "email" : "sjones@test.com", 
            "sendEmailReceipts": true, 
            "sendTextReminders": null, 
            "sendTextReceipts": true
        }
+ Response 400

        {
            "error": "The request is invalid"
        }

+ Request no sendTextReceipts (application/json)            

        {
            "email" : "sjones@test.com", 
            "sendEmailReceipts": true, 
            "sendTextReminders": true, 
            "sendTextReceipts": null
        }
+ Response 400

        {
            "error": "The request is invalid"
        }

+ Request userAccountId Does Not Exists 

        /public/parking/accounts/{userAccountId}/preferences
+ Response 404
    
# Group Parking Quote
Parking  resources

## Quote [/public/parking/quote?location={location}&startTime={startTime}&timeUnit={timeUnit}&quantity={quantity}]
A quote based on submitted input parameters

+ Parameters
    + location (required, number) ... Numeric `location` to park
    + startTime (required, date) ... datetime to start parking
    + timeUnit (required, string) ... timeunit for parking
    + quantity (required, number) ... timeunit quantity for parking

+ Model (application/json)

    JSON representation of A Quote.

    + Body

            {
                "id":"5",
                "locationNumber":"10202990",
                "amount":"2.50",
                "startTime":"2014-07-22T10:14:40-0700",
                "expiryTime":"2014-07-22T11:14:40-0700"
            }

### Retrieve quote [GET]
**Request Contract**

    Header: Authorization: Bearer <token>

**Response Contract**
    
    Content-Type: application/json
    {
        "id":"5",
        "locationNumber":"10202990",
        "amount":"2.50",
        "startTime":"2014-07-22T10:14:40-0700",
        "expiryTime":"2014-07-22T11:14:40-0700"
    }

+ Response 200
    [Quote][]

+ Response 400

        {
            "error": 
            "The request is invalid"
        }

# Group Payment
## About
Payment API provides payment account related resources

# Group Payment Accounts

## Payment Accounts [/public/payment/accounts]

The Payment Accounts root resource

+ Model (application/json)

    JSON representation of Payment Account

    + Body

            { 
                "id": "72de36abf64447d3944bacae39ea1f7d",
                "paymentCardType": "Visa",
                "nameOnCard": "JOHN L SMITH",
                "expiryMonth": 1,
                "expiryYear": 2019,
                "startMonth": null,
                "startYear": null,
                "issueNumber": null
            }

### Create a new payment account for a member [POST]

The Member is identified by the **memberid** claim in the authorization bearer token

**Request Contract**

    Header: Authorization: Bearer <token>
    Content-Type: application/json
    {
        "country": "CA",
        "number": "4111111111111111",
        "expiryYear": 2019,
        "expiryMonth": 1,
        "name": "JOHN L SMITH",
        "cvv": 123,
        "startYear": 2010,
        "startMonth": 1,
        "issueNumber": 12
    }

**Mandatory Fields**

- country (string : [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))
- number (string : [Bank card number](http://en.wikipedia.org/wiki/Bank_card_number))
- expiryYear (integer : >= current year - current year + 10)
- expiryMonth (integer : 1-12, > current month if current year)

**Mandatory Fields for North America**

- name (string)

**Mandatory Fields for France**

- cvv (integer : 3-4 digits)

**Optional Fields for United Kingdom**

- startMonth (integer : 1-12, <= current month if current year)
- startYear (integer : <= current year)
- issueNumber (integer : 2 digits)
        
**Possible Response Codes**

- 202
- 401
- 500

+ Request NA with name (application/json)

        {
            "country": "CA",
            "number": "4111111111111111",
            "expiryMonth": 6,
            "expiryYear": 2016,
            "name": "JOHN L SMITH"
        }
+ Response 202 (application/json)
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e/

+ Request NA no name (application/json)

        {
            "country": "CA",
            "number": "4111111111111111",
            "expiryMonth": 6,
            "expiryYear": 2016
        }
+ Response 202 (application/json)
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e/

+ Request UK start mm/yy (application/json)

        {
            "country": "UK",
            "number": "4111111111111111",
            "expiryMonth": 6,
            "expiryYear": 2016,
            "startMonth": 1,
            "startYear": 2012
        }
+ Response 202 (application/json)
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e/

+ Request UK issuenumber (application/json)

        {
            "country": "UK",
            "number": "4111111111111111",
            "expiryMonth": 6,
            "expiryYear": 2016,
            "issueNumber": 12
        }
+ Response 202 (application/json)
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e/
        
+ Request FR (application/json)

        {
            "country": "FR",
            "number": "4111111111111111",
            "expiryMonth": 6,
            "expiryYear": 2016,
            "cvv": 111
        }
+ Response 202 (application/json)
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e/

+ Response 401 (application/json)

        {"error": "Unauthorized"}

+ Response 500 (application/json)

        {"error": "Unhandled error"}
        
### Retrieve all payment accounts for member [GET]

Retrieve all Payment Accounts for a Member.

The Member is identified by the **memberid** claim in the authorization bearer token

**Request Contract**

    Header: Authorization: Bearer <token>

**Response Contract**
    
    Content-Type: application/json
    [
        {
            "id": "72de36abf64447d3944bacae39ea1f7d",
            "paymentCardType": "Visa",
            "nameOnCard": "Test",
            "expiryMonth": 1,
            "expiryYear": 2019,
            "startMonth": null,
            "startYear": null,
            "issueNumber": null
        }
    ]
    
**Possible Response Codes**

- 200
- 401
- 500

+ Request
    
        /public/payment/accounts
+ Response 200
        [Payment Accounts][]

+ Response 401 (application/json)

        {"error": "Unauthorized"}

+ Response 500 (application/json)

        {"error": "Unhandled error"}

## Payment Account [/public/payment/accounts/{paymentAccountId}]

An individual Payment Account resource

+ Parameters
    + paymentAccountId (required, guid) ... Guid `paymentAccountId` of the User Resource to perform action with. Has example value.

+ Model (application/json)

    JSON representation of Payment Account

    + Body

            { 
                "id": "72de36abf64447d3944bacae39ea1f7d",
                "paymentCardType": "Visa",
                "nameOnCard": "Test",
                "expiryMonth": 1,
                "expiryYear": 2019,
                "startMonth": null,
                "startYear": null,
                "issueNumber": null
            }
            
### Retrieve a payment account for member [GET]

Retrieve a Payment Account for a Member.

The Member is identified by the **memberid** claim in the authorization bearer token

Payment Account is identified by the `paymentAccountId`

**Request Contract**

    Header: Authorization: Bearer <token>

**Response Contract**
    
    Content-Type: application/json
    {
        "id": "72de36abf64447d3944bacae39ea1f7d",
        "paymentCardType": "Visa",
        "nameOnCard": "Test",
        "expiryMonth": 1,
        "expiryYear": 2019,
        "startMonth": null,
        "startYear": null,
        "issueNumber": null
    }
    
**Possible Response Codes**

- 200
- 400
- 401
- 404
- 500

+ Request paymentAccountId exists
    
        /public/payment/accounts/{paymentAccountId}
+ Response 200
        [Payment Account][]

+ Request paymentAccountId Does Not exists
        
        /public/payment/accounts/{paymentAccountId}
+ Response 404 (application/json)

        {"error": "Not found"}

+ Request paymentAccountId is not a Guid
        
        /public/payment/accounts/{paymentAccountId}
+ Response 400 (application/json)

        {"error": "PaymentAccountIdInvalidFormat"}

+ Response 401 (application/json)

        {"error": "Unauthorized"}

+ Response 500 (application/json)

        {"error": "Unhandled error"}

### Update a payment account for a member [PUT]

Update a Payment Account for a Member.

The Member is identified by the **memberid** claim in the authorization bearer token

Payment Account is identified by the `paymentAccountId`.

**Request Contract**

    Header: Authorization: Bearer <token>
    Content-Type: application/json
    {
        "country": "CA",
        "expiryYear": 2019,
        "expiryMonth": 1,
        "name": "JOHN L SMITH",
        "cvv": 123,
        "startYear": 2010,
        "startMonth": 1,
        "issueNumber": 12
    }

**Mandatory Fields**

- country (string : [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))
- expiryYear (integer : >= current year - current year + 10)
- expiryMonth (integer : 1-12, > current month if current year)

**Mandatory Fields for North America**

- name (string)

**Mandatory Fields for France**

- cvv (integer : 3-4 digits)

**Optional Fields for United Kingdom**

- startMonth (integer : 1-12, <= current month if current year)
- startYear (integer : <= current year)
- issueNumber (integer : 2 digits)

**Possible Response Codes**

- 202
- 401
- 500 

+ Request NA with name (application/json)

        {
            "country": "CA",
            "expiryMonth": 6,
            "expiryYear": 2016,
            "name": "JOHN L SMITH"
        }
+ Response 202 (application/json)
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e/

+ Request NA no name (application/json)

        {
            "country": "CA",
            "expiryMonth": 6,
            "expiryYear": 2016
        }
+ Response 202 (application/json)
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e/

+ Request UK start mm/yy (application/json)

        {
            "country": "UK",
            "expiryMonth": 6,
            "expiryYear": 2016,
            "startMonth": 1,
            "startYear": 2012
        }
+ Response 202 (application/json)
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e

+ Request UK issuenumber (application/json)

        {
            "country": "UK",
            "expiryMonth": 6,
            "expiryYear": 2016,
            "issueNumber": 12
        }
+ Response 202 (application/json)
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e

+ Request FR (application/json)

        {
            "country": "FR",
            "expiryMonth": 6,
            "expiryYear": 2016,
            "cvv": 111
        }
+ Response 202 (application/json)
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e

+ Response 401 (application/json)

        {"error": "Unauthorized"}

+ Response 500 (application/json)

        {"error": "Unhandled error"}

### Delete a payment account for a member [DELETE]

Delete a Payment Account for a Member.

The Member is identified by the **memberid** claim in the authorization bearer token

Payment Account is identified by the `paymentAccountId`.

**Request Contract**

    Header: Authorization: Bearer <token>

**Possible Response Codes**

- 202
- 401
- 500

+ Request paymentAccountId Exists

        /public/payment/accounts/{paymentAccountId}
+ Response 202 (application/json)
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e/

+ Request paymentAccountId Does Not Exists

        /public/payment/accounts/{paymentAccountId}
+ Response 202 (application/json)
    + Header

            Location: http://api.dev.paybyphone.com/public/events/8d21a912-561a-48ff-b31b-00d600a2544e/

+ Response 401 (application/json)

        {"error": "Unauthorized"}

+ Response 500 (application/json)

        {"error": "Unhandled error"}
        
# Group Notifications2
## About
Notifications API provides Feed And Device related resources

# Group FeedItems
FeedItem resources

## Feeditems [/public/notifications/feedItems?sinceTimeStampRfc3339={timestamp}&howMany={howMany}]
Get item(s) from the member activity feed starting from a specific date and time.

+ Parameters
    + timestamp (required, string, `2014-06-10T08:56:04.0000-0700`) ... Start date and time from which to retrieve the activity feed items
    + howMany (required, number, `50`) ... How many items to retrieve from the activity feed

+ Model (application/json)

    JSON representation of A Feeditem.

    + Body

            [{
                "subject": "Parking Complete",
                "content": "Parking For:  \r\nLocation: 20506621 \r\nExpired: 03/07/2014 12:37 PM \r\nCost: $0.54\r\n",
                "timeStampRfc3339": "2014-07-03T12:38:35Z",
                "imageUrlPath": "http://paybyphone.co.uk/images/app_assets/pbp_icon.png",
                "moreDetailsUrl": "http://www.google.com", 
                "type": "Parking History"
            },
            {
                "subject": "SFMTA Advisory",
                "content": "Please be aware that MUNI will be closed for service upgrades on Wednesday nights from 3:00 am to 4:00 am.",
                "timeStampRfc3339": "2014-07-08T15:42:12Z ",
                "imageUrlPath": "https://si0.twimg.com/profile_images/3288835160/696dc7d131ccb873b1c399dcb08d0c8c.jpeg",
                "moreDetailsUrl": "http://www.sfmta.com", 
                "type": "Service Update"                
            }]
            
### Retrieve all feed items for a member [GET]

Member is identified by the userAccountId extracted from the access token.

**Request Contract**

    Header: Authorization: Bearer <token>
    
**Mandatory Fields**

- timestamp
- howMany 

**Response Contract**

        Content-Type: application/json
        [{
                "subject": "",
                "content": "",
                "timeStampRfc3339": "",
                "imageUrlPath": "",
                "moreDetailsUrl": "", 
                "type": ""
        },
        {
                "subject": "",
                "content": "",
                "timeStampRfc3339": "",
                "imageUrlPath": "",
                "moreDetailsUrl": "", 
                "type": ""                
        }]

**Possible Response Codes**

- 200
- 400
- 401
- 500

+ Request all fields supplied
    
        All mandatory fields supplied
+ Response 200
    [Feeditems][]

+ Response 500
    
        Unhandled error

+ Response 400

        {"error": "The request is invalid"}

+ Request missing timeStamp field

        Missing {timeStamp}
+ Response 400

        {"error": "The request is invalid"}

+ Request missing howMany field

        Missing {howMany}
+ Response 400

        {"error": "The request is invalid"}

+ Request missing or invalid authorization

        Authoriazation header field is missing or bearer token is not valid
+ Response 401

        {"message":"Authorization has been denied for this request."}

# Group Devices
Device resources

## Devices [/public/notifications/devices]
The devices root resource

### Add a device for member [POST]

Register a device for a member.

Member is identified by the userAccountId extracted from the access token.

Device language is identified by the Accept-Language header, using first value and defaulting to 'en'.

**Request Contract**

    Header: Authorization: Bearer <token>
    Header: Accept-Language: en-ca,en-us;q=0.8,fr-ca;q=0.5,fr-fr;q=0.3
    Content-Type: application/x-www-form-urlencoded
    deviceToken=&type=&isOptedInForAdvertising=

**Mandatory Fields**

- deviceToken
- type  (possible values are: iPhone, iPad, AndroidPhone, AndroidTablet, BackBerryPhone, BlackBerryTablet, CarInDashDevice)

**Optional Fields**

- isOptedInForAdvertising   (optional, boolean, defaults to false)

**Possible Response Codes**

- 202
- 400
- 401
- 500

+ Request with mandatory fields (application/x-www-form-urlencoded)
    + Body
    
            deviceToken=1111-2222&type=iPhone&isOptedInForAdvertising=true
+ Response 202 (application/json)
    + Header

            Location: http://api.paybyphone.com/public/notifications/devices/1111-2222
    
+ Response 500
    
        Unhandled error

+ Request with no deviceToken (application/x-www-form-urlencoded)
    + Body
    
            deviceToken=type=iPhone&isOptedInForAdvertising=true
+ Response 500

        {"message": "An error has occurred."}

+ Request with no type (application/x-www-form-urlencoded)
    + Body
    
            deviceToken=1111-2222&type=&isOptedInForAdvertising=true
+ Response 400

+ Request with no isOptedInForAdvertising
    + Body
        
            deviceToken=1111-2222&type=iPhone&isOptedInForAdvertising=
+ Response 202
    + Header

            Location: http://api.paybyphone.com/public/notifications/devices/1111-2222

+ Request with missing or invalid authorization

        Authorization header field is missing or bearer token is not valid
+ Response 401

        {"message":"Authorization has been denied for this request."}


## Device [/public/notifications/devices/{deviceToken}]
An individual device resource

+ Parameters
    + deviceToken (required, string, `abcd-1234-abcd-124`) ... the `deviceToken` Unique identifier for the device

+ Model (application/json)

    JSON representation of A Device.

    + Body

            {
                "memberDeviceId": "315125",
                "wavePayMemberId": 7785523,
                "isLoggedIn": true,
                "deviceToken": "1234-5678",
                "isOptedInForAdvertising": true,
                "deviceName": "iPhone",
                "deviceLanguage": "en-CA"
            }
            
### Retrieve an individual device for a member [GET]
Member is identified by the userAccountId extracted from the access token.

Device is identified by the `deviceToken`

**Request Contract**

    Header: Authorization: Bearer <token>
    
**Mandatory Fields**

- deviceToken

**Response Contract**

        Content-Type: application/json
        {
            "memberDeviceId": ""
            "wavePayMemberId": ""
            "isLoggedIn": ""
            "deviceToken": ""
            "isOptedInForAdvertising": ""
            "deviceName": ""
            "deviceLanguage": ""
        }

**Possible Response Codes**

- 200
- 400
- 401
- 404
- 405
- 500

+ Request all fields supplied
    
        All mandatory fields supplied
+ Response 200
    [Device][]

+ Response 500
    
        Unhandled error

+ Response 404

+ Request missing deviceToken field

        /public/notifications/devices/
+ Response 405

        {"message":"The requested resource does not support http method 'GET'."}

+ Request device not found for userAccountId (extracted from token)

        /public/notifications/devices/{deviceToken}
    
+ Response 404

+ Request with missing or invalid authorization

        Authorization header field is missing or bearer token is not valid
+ Response 401

        {"message":"Authorization has been denied for this request."}


### Edit a device [PUT]
Update a member device status.

Member is identified by the userAccountId extracted from the access token.

Device is identified by the `deviceToken`.

Device language is determined by the Accept-Language header, using first value or defaults to 'en'.

**Request Contract**

    Header: Authorization: Bearer <token>
    Header: Accept-Language: en-ca,en-us;q=0.8,fr-ca;q=0.5,fr-fr;q=0.3
    Content-Type: application/x-www-form-urlencoded
    type=&isLoggedIn=&isOptedInForAdvertising=

**Mandatory Fields**

- deviceToken
- type  (possible values are: iPhone, iPad, AndroidPhone, AndroidTablet, BackBerryPhone, BlackBerryTablet, CarInDashDevice)

**Optional Paramters**

- isLoggedIn    (optional, boolean, defaults to false)
- isOptedInForAdvertising   (optional, boolean, defaults to false)

**Possible Response Codes**

- 204
- 400
- 401
- 405
- 500

+ Request with mandatory fields (application/x-www-form-urlencoded)
    + Body
    
            type=iPhone&isLoggedIn=true&isOptedInForAdvertising=true
+ Response 204 
    
+ Response 500
    
        Unhandled error

+ Response 404

+ Request no device token (application/x-www-form-urlencoded)
    + Body
    
            /public/notifications/devices/
+ Response 405

        {"message":"The requested resource does not support http method 'PUT'."}

+ Request no type (application/x-www-form-urlencoded)
    + Body
    
            type=&isLoggedIn=true&isOptedInForAdvertising=true
+ Response 400

+ Request with no isLoggedIn (application/x-www-form-urlencoded)
    + Body
    
            type=iPhone&isLoggedIn=&isOptedInForAdvertising=true
+ Response 204 

+ Request with no isOptedInForAdvertising (application/x-www-form-urlencoded)
    + Body
    
            type=iPhone&isLoggedIn=true&isOptedInForAdvertising=
+ Response 204 

+ Request with missing or invalid authorization

        Authorization header field is missing or bearer token is not valid
+ Response 401

        {"message":"Authorization has been denied for this request."}
        
# Group EVENTS API
## About
Events API provides event related resources

# Group Events3
Event resources

## Events [/public/events/{workflowId}/]
Get event(s) generated under a specific workflowId.

+ Parameters
    + workflowId (required, string, `8d21a912-561a-48ff-b31b-00d600a2544e`) ... `workflowId` representing a collection of related events in the form of a GUID.

+ Model (application/json)

    JSON representation of A Event.

    + Body

            [{
                "$type" : "Pbp.Contracts.Shared.Parking.Events.ParkingSessionCreated, Pbp.Contracts.Shared",
                "vehiclePlate" : "WEST111",
                "vehicleState" : "BC",
                "vehicleType" : "Car",
                "locationId" : 8990,
                "parkingSessionId" : "4f53q912-561a-48ff-b31b-00d600a2544e",
                "vendorLocationId" : "ZZ2532",
                "stall" : "",
                "startTime" : "2014-08-17T17:12:47.2834849Z",
                "expireTime" : "2014-08-17T17:42:47.2834849Z",
                "vendorId" : 504,
                "account" : "76662345678"
            },
            {
                "$type" : "Pbp.Contracts.Shared.Parking.Events.ParkingSessionExtended, Pbp.Contracts.Shared",
                "vehicleState" : "BC",
                "vehicleType" : "Car",
                "vehiclePlate" : "DFDFDF",
                "newExpiryTime" : "2014-09-17T18:42:47.2834849Z",
                "oldExpiryTime" : "2014-09-17T17:42:47.2834849Z",
                "locationId" : 8990,
                "vendorLocationId" : "RR1235",
                "stall": "",
                "vendorId" : 504,
                "account" : "76662345678",
                "extensionLvpId" : "B2982F39-0373-4486-A200-24FE7AC68F45"
            },
            {
                "$type": "Pbp.Contracts.Shared.Payments.Events.PaymentAccountCreated, Pbp.Contracts.Shared",
                "memberId": "B2982F39-0373-4486-A200-24FE7AC68F45",
                "paymentAccountId": "B2982F39-0373-4486-A200-24FE7AC68F45",
                "maskedCardNumber": "411111------1111",
                "expiryMonth": 12,
                "expiryYear": 2015,
                "nameOnCard": "John Smith",
                "issueNumber": 31,
                "startMonth": 1,
                "startYear": 2014
            },
            {
                "$type": "Pbp.Contracts.Shared.UserAccounts.Events.UserAccountPasswordChanged, Pbp.Contracts.Shared",
                "userAccountId": "8d21a912-561a-48ff-b31b-00d600a2544e",
            }]
            
### Retrieve all parking events in a workflow [GET]

Workflow is identified by the workflowId.

**Request Contract**

    Header: Authorization: Bearer <token>
    
**Mandatory Fields**

- workflowId 

**Response Contract**

        Content-Type: application/json
        [{
            "$type" : "Pbp.Contracts.Shared.Parking.Events.ParkingSessionCreated, Pbp.Contracts.Shared",
            "vehiclePlate" : "WEST111",
            "vehicleState" : "BC",
            "vehicleType" : "Car",
            "locationId" : 8990,
            "parkingSessionId" : "4f53q912-561a-48ff-b31b-00d666a2544e",
            "vendorLocationId" : "ZZ2532",
            "stall" : "",
            "startTime" : "2014-09-17T17:12:47.2834849Z",
            "expireTime" : "2014-09-17T17:42:47.2834849Z",
            "vendorId" : 504,
            "account" : "76662345678"
        },
        {
            "$type" : "Pbp.Contracts.Shared.Parking.Events.ParkingSessionCreated, Pbp.Contracts.Shared",
            "vehiclePlate" : "WEST111",
            "vehicleState" : "BC",
            "vehicleType" : "Car",
            "locationId" : 8990,
            "parkingSessionId" : "4f53q912-561a-48ff-b31b-00d600a2544e",
            "vendorLocationId" : "ZZ2532",
            "stall" : "",
            "startTime" : "2014-09-17T17:12:47.2834849Z",
            "expireTime" : "2014-09-17T17:42:47.2834849Z",
            "vendorId" : 504,
            "account" : "76662345678"
        },
        {
            "$type" : "Pbp.Contracts.Shared.Parking.Events.ParkingSessionExtended, Pbp.Contracts.Shared",
            "vehicleState" : "BC",
            "vehicleType" : "Car",
            "vehiclePlate" : "DFDFDF",
            "newExpiryTime" : "2014-09-17T18:42:47.2834849Z",
            "oldExpiryTime" : "2014-09-17T17:42:47.2834849Z",
            "locationId" : 8990,
            "vendorLocationId" : "ZZ2532",
            "stall": "",
            "vendorId" : 504,
            "account" : "76662345678",
            "extensionLvpId" : "B2982F39-0373-4486-A200-24FE7AC68F45"
        },
        {
            "$type": "Pbp.Contracts.Shared.Payments.Events.PaymentAccountCreated, Pbp.Contracts.Shared",
            "memberId": "B2982F39-0373-4486-A200-24FE7AC68F45",
            "paymentAccountId": "B2982F39-0373-4486-A200-24FE7AC68F45",
            "maskedCardNumber": "411111------1111",
            "expiryMonth": 12,
            "expiryYear": 2015,
            "nameOnCard": "John Smith",
            "issueNumber": 31,
            "startMonth": 1,
            "startYear": 2014
        }]

**Possible Response Codes**

- 200
- 400
- 401
- 500

+ Request all fields supplied
    
        All mandatory fields supplied
+ Response 200
    [Events][]

+ Response 500
    
        Unhandled error

+ Request missing workflowId field

        Missing {workflowId}
+ Response 400

        {"error": "The request is invalid"}

+ Request missing or invalid authorization

        Authoriazation header field is missing or bearer token is not valid
+ Response 401

        {"message":"Authorization has been denied for this request."}
